{"mappings":"AA4CA,MAAMA,EAAOC,SAASC,cAAc,YAC9BC,EAAaF,SAASC,cAAc,cACpCE,EAAaH,SAASC,cAAc,WACpCG,EAAgBJ,SAASC,cAAc,sBAE7CE,EAAWE,iBAAiB,SAG5B,WAEID,EAAcE,mBAAmB,YADlB,qC,IAHnBJ,EAAWG,iBAAiB,UAO5B,SAAqBE,GACjBA,EAAEC,iBACF,MAAMC,EAAO,IAAIC,SAASH,EAAEI,gBAchCC,eAA4BC,GACxB,MAAMC,EAAOD,EAAIE,KAAIH,MAAMI,IACvB,MAAMC,QAAaC,MAAM,uCAAuCF,KAChE,IAAIC,EAAKE,GACL,MAAM,IAAIC,MAEd,OAAOH,EAAKI,MAAM,IAGhBZ,QAAaa,QAAQC,WAAWT,GAKtC,OAJmBL,EAClBe,QAAO,EAACC,OAAEA,KAAwB,cAAXA,IACvBV,KAAI,EAACW,MAAEA,KAAYA,EAAM,I,EAxB1BC,CADYlB,EAAKmB,OAAO,WAAWJ,QAAOR,GAAQA,IAAMD,KAAIC,GAAQA,EAAKa,UAExEC,MAAKlB,MAAMK,IACR,MAAMc,EAAWd,EAAKF,KAAI,EAACiB,QAAEA,KAAcA,EAAQ,KAC7CC,QA0BdrB,eAA0BC,GAEtB,MAAMqB,EAAW,gCACXC,EAAU,kCAEVC,EAAQvB,EAAIE,KAAIH,MAAMyB,IACxB,MAAMC,EAAS,IAAIC,gBAAgB,CAC/BC,IAAKL,EACLM,EAAGJ,EACHK,KAAM,OAGJzB,QAAaC,MAAM,GAAGgB,kBAAyBI,KAErD,IAAIrB,EAAKE,GACL,MAAM,IAAIC,MAAMH,EAAK0B,YAGzB,OAAO1B,EAAKI,MAAM,IAIhBuB,SADatB,QAAQC,WAAWa,IACrBZ,QAAO,EAACC,OAAEA,KAAwB,cAAXA,IACvCV,KAAI,EAACW,MAAEA,KAAYA,IAEpB,OADAmB,QAAQC,IAAIF,GACLA,C,CAnD0BG,CAAWhB,GACxChC,EAAKiD,UAsDb,SAAsBnC,GAClB,OAAOA,EAAIE,KAAI,EACXkC,SAASC,OAAEA,EAAQC,WAAWC,KAAEA,EAAIC,KAAEA,IACtCC,UAAUC,QAAEA,EAAOC,KAAEA,MAAa,8CAGxBD,2BACAC,iCACMJ,WAAcC,uBACrBA,sC,2CAIVI,KAAK,G,CAnEaC,CAAazB,GAE9B7B,EAAc4C,UAAW,EAAE,IAE9BW,OAAMC,GAAOf,QAAQC,IAAIc,KACzBC,SAAQ,IAAO3D,EAAW4D,S","sources":["src/countries/countries.js"],"sourcesContent":["// async function getCapital() {\n//     const URL = 'https://restcountries.com/v3.1/name/';\n//     const response = await fetch(`${URL}Ukraine`);\n//     return  response.json();\n// }\n\n// getCapital()\n// .then(data => {\n//     list.innerHTML = markupCountrie(data.results)\n// })\n// .catch(err => console.log(err));\n\n// function markupCountrie(name) {\n//     return markup = `<div>\n//         <h2>Name: ${name.common.ukr}</h2>\n//         <h3>Population: ${name.population}</h3>\n//         <div>\n//             <img src=\"${name.coatOfArms.png}\" alt=\"gerb\"  width=\"50\"/>\n//             <img src=\"${name.flags.svg}\" alt=\"flag\"  width=\"50\"/>\n//         </div>\n//     </div>`\n// }\n\n// async function getCapital() {\n//     try{\n//         const URL = 'https://restcountries.com/v3.1/name/';\n//         const arr = ['Ukraine', 'France', 'Germany'];\n    \n//         const response = arr.map(async(ctr) => {\n//             const res =  await fetch(`${URL}${ctr}`);\n//             return res.json();\n//         })\n    \n//         const promis = await Promise.allSettled(response);\n//         return promis;\n//     } catch(e) {\n//         console.log(e);\n//     }\n// }\n\n// getCapital()\n// .then(data => console.log(data))\n// .catch(e => console.log(e));\n\nconst list = document.querySelector(\".js-list\");\nconst searchForm = document.querySelector(\".js-search\");\nconst addCountry = document.querySelector(\".js-add\");\nconst formContainer = document.querySelector(\".js-form-container\");\n\naddCountry.addEventListener('click', handlerAddInput);\nsearchForm.addEventListener('submit', handlerForm)\n\nfunction handlerAddInput() {\n    const markup = `<input type=\"text\" name=\"country\">`;\n    formContainer.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction handlerForm(e) {\n    e.preventDefault();\n    const data = new FormData(e.currentTarget);\n    const arr = data.getAll('country').filter(item => item).map(item => item.trim());\n    getCountries(arr)\n    .then(async resp => {\n        const capitals = resp.map(({ capital }) => capital[0])\n        const weatherService = await getWeather(capitals);\n        list.innerHTML = createMarkup(weatherService);\n        const markup = `<input type=\"text\" name=\"country\">`;\n        formContainer.innerHTML= \"\";\n    })   \n    .catch(err => console.log(err))\n    .finally(() =>  searchForm.reset());\n}\n\nasync function getCountries(arr) {\n    const resp = arr.map(async item => {\n        const resp = await fetch(`https://restcountries.com/v3.1/name/${item}`)\n        if(!resp.ok) {\n            throw new Error();\n        }\n        return resp.json();\n    });\n\n    const data = await Promise.allSettled(resp);\n    const countryObj = data\n    .filter(({ status }) => status === \"fulfilled\")\n    .map(({ value }) => value[0]);\n    \n    return countryObj;\n}\n\nasync function getWeather(arr) {\n\n    const BASE_URL = 'https://api.weatherapi.com/v1';\n    const API_KEY = 'c0dca8ed73ba444e8db231919241301';\n\n    const resps = arr.map(async city => {\n        const params = new URLSearchParams({\n            key: API_KEY,\n            q: city,\n            lang: \"uk\"\n        });\n\n        const resp = await fetch(`${BASE_URL}/current.json?${params}`)\n        \n        if(!resp.ok) {\n            throw new Error(resp.statusText);\n        }\n\n        return resp.json();\n    });\n    \n    const data = await Promise.allSettled(resps);\n    const obj = data.filter(({ status }) => status === \"fulfilled\")\n    .map(({ value }) => value);\n    console.log(obj)\n    return obj\n};\n\n\nfunction createMarkup(arr) {\n    return arr.map(({ \n        current: { temp_c, condition: { icon, text }}, \n        location: { country, name } }) => `\n    <li>\n        <div>\n            <h2>${country}</h2>\n            <h3>${name}</h3>\n            <img src=\"${icon}\" alt=\"${text}\">\n            <p>${text}</p>\n            <p>Температура: ${temp_c}</p>\n        </div>\n    </li>\n    `).join(\"\");\n}"],"names":["$e64b5224edf7ede8$var$list","document","querySelector","$e64b5224edf7ede8$var$searchForm","$e64b5224edf7ede8$var$addCountry","$e64b5224edf7ede8$var$formContainer","addEventListener","insertAdjacentHTML","e","preventDefault","data","FormData","currentTarget","async","arr","resp1","map","item","resp","fetch","ok","Error","json","Promise","allSettled","filter","status","value","$e64b5224edf7ede8$var$getCountries","getAll","trim","then","capitals","capital","weatherService","BASE_URL","API_KEY","resps","city","params","URLSearchParams","key","q","lang","statusText","obj","console","log","$e64b5224edf7ede8$var$getWeather","innerHTML","current","temp_c","condition","icon","text","location","country","name","join","$e64b5224edf7ede8$var$createMarkup","catch","err","finally","reset"],"version":3,"file":"countries.45ea1b6a.js.map"}