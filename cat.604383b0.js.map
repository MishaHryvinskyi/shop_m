{"mappings":"AAAA,MAAMA,EAAMC,SAASC,cAAc,aAC7BC,EAASF,SAASC,cAAc,WAEtC,IAAIE,EAAc,EAQdC,EAAW,IAAIC,sBAEnB,SAAgBC,EAASC,GACrBD,EAAQE,SAASC,IACVA,EAAMC,iBACLP,GAAe,EACfQ,EAASR,GACRS,MAAKC,IACFC,KAAKC,mBAAmB,YAAaC,EAAOH,IACzCA,EAAKI,OAASJ,EAAKK,aAClBX,EAASY,UAAUjB,EAAO,IAGjCkB,OAAOC,GAAQC,QAAQC,IAAIF,K,MAnB3B,CACTG,KAAM,KACNC,WAAY,QACZC,UAAW,IAqBf,SAASf,EAASM,EAAO,GACrB,MAEMU,EAAM,wJAA8DV,IAG1E,OAFAK,QAAQC,IAAII,GAELC,MAAMD,GACZf,MAAKiB,GAAYA,EAASC,SAC1BlB,MAAKC,IACFd,EAAIgB,mBAAmB,YAAcC,EAAOH,IAC5CT,EAAS2B,QAAQ7B,EAAO,IAC7BkB,OAAOC,GAAQC,QAAQC,IAAIF,I,CAK9B,SAASL,EAAOgB,GACZ,OAAOA,EAAIC,KAAI,EAACN,IAAEA,EAAGO,OAAEA,MACvB,MAAMC,KAAEA,EAAIC,GAAEA,EAAEC,OAAEA,EAAMC,YAAEA,GAAgBJ,EAAO,GAEjD,MAAM,sCACyBE,mCACND,8CACQE,kDACIV,WAAaQ,mCACrCG,6BAEZ,IAAGC,KAAK,G,CAbb5B","sources":["src/Cat-scripts/cat-script.js"],"sourcesContent":["const box = document.querySelector(\".root-cat\");\nconst target = document.querySelector(\".target\");\n\nlet currentPage = 1;\n\nlet option = {\n    root: null,\n    rootMargin: \"300px\",\n    threshold: 1,\n};\n\nlet observer = new IntersectionObserver(onLoad, option);\n\nfunction onLoad(entries, observer) {\n    entries.forEach((entry) => {\n        if(entry.isIntersecting) {\n            currentPage += 1;\n            fetchCat(currentPage)\n            .then(data => {\n                list.insertAdjacentHTML('beforeend', markup(data));\n                if(data.page === data.total_pages) {\n                    observer.unobserve(target);\n                }\n            })\n            .catch((err) => console.log(err));\n        }\n    })\n}\n\nfunction fetchCat(page = 1) {\n    const BASE_URL = \"https://api.thecatapi.com/v1/images/search\";\n    const API_KEY = \"live_1Vj7n5aJuf5yxdbAECUbqNw1q6zp3z4LY0EUuUZYfXCD687p6tfQtxYjFie5zZhD\";\n    const url = `${BASE_URL}?limit=8&breed_ids=beng&api_key=${API_KEY}&page=${page}`;\n    console.log(url)\n    \n    return fetch(url)\n    .then(response => response.json())\n    .then(data => {\n        box.insertAdjacentHTML('beforeend',  markup(data))\n        observer.observe(target)\n}).catch((err) => console.log(err));\n\n}\nfetchCat()\n\nfunction markup(arr) {\n    return arr.map(({ url, breeds }) => {\n    const { name, id, origin, description } = breeds[0];\n\n    return`\n        <div class=\"cat-box\" id=\"${id}\">\n            <h2>Cat breed: ${name}</h2>\n            <h3>Country of Origin: ${origin}</h3>\n            <img class=\"cat__img\" src=\"${url}\" alt=\"${name}\" width=\"300\">\n            <p>${description}</p>\n        </div>\n    `}).join('')\n}"],"names":["$32050adc1cccf660$var$box","document","querySelector","$32050adc1cccf660$var$target","$32050adc1cccf660$var$currentPage","$32050adc1cccf660$var$observer","IntersectionObserver","entries","observer1","forEach","entry","isIntersecting","$32050adc1cccf660$var$fetchCat","then","data","list","insertAdjacentHTML","$32050adc1cccf660$var$markup","page","total_pages","unobserve","catch","err","console","log","root","rootMargin","threshold","url","fetch","response","json","observe","arr","map","breeds","name","id","origin","description","join"],"version":3,"file":"cat.604383b0.js.map"}