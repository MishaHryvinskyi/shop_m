{"mappings":"YAAO,IAAMA,EAAO,SAACC,EAAKC,GACtB,IACI,IAAMC,EAAOC,KAAKC,UAAUH,GAC5BI,aAAaC,QAAQN,EAAKE,E,CAC5B,MAAOK,GACLC,QAAQC,MAAM,kBAAmBF,EAAIG,Q,GAIhCC,EAAO,SAACX,GACjB,IACI,IAAME,EAAOG,aAAaO,QAAQZ,GAClC,OAAgB,OAATE,OAAgBW,EAAYV,KAAKW,MAAMZ,E,CAChD,MAAMK,GACJC,QAAQC,MAAM,cAAeF,EAAIG,Q,GCZnCK,EAAc,QACdC,EAAUC,SAASC,eAAe,WAClCC,EAAOF,SAASC,eAAe,QAEjCE,EAAY,EAEhB,SAASC,EAAeC,GACpB,IAAMC,EAAON,SAASO,cAAc,QAC9BC,EAAMR,SAASS,eAAe,KACpCH,EAAKI,UAAY,QACjBJ,EAAKK,YAAYH,GACjBH,EAAOM,YAAYL,E,CAiBvB,SAASM,EAASC,G,IAAMC,EAAAC,UAAAC,OAAA,YAAAD,UAAA,IAAcA,UAAA,GAAEE,EAAAF,UAAAC,OAAA,YAAAD,UAAA,GAAcA,UAAA,GAATZ,EACnCe,EAAOlB,SAASO,cAAc,MACpCW,EAAKC,YAAcN,EACnBK,EAAKE,QAAQH,GAAKA,EACfH,GAAQI,EAAKG,UAAUC,IAAI,WAC9BpB,EAAKS,YAAYO,GACjBd,EAAec,E,CAuBnB,SAASK,EAAiBV,EAAMC,GAC5B,MAAO,CACHD,OACAC,SACAG,GAAId,E,CCzDZ,IAAMqB,EAAOxB,SAASC,eAAe,QACtBD,SAASC,eAAe,UAEhCwB,iBAAiB,SDOxB,WACI,IAAMC,EAAO3B,EAAQf,MAAM2C,OAE3B5B,EAAQf,MAAQ,GAEJ,KAAT0C,GAKHd,EAASc,GAyCb,SAA0Bb,G,IAAMC,EAAAC,UAAAC,OAAA,YAAAD,UAAA,IAAcA,UAAA,GACpCa,EAAelC,EAAKI,GAC1B,QAAoBF,IAAjBgC,EAA4B,CAC3B,IAAMC,EAAM,CAACN,EAAiBV,EAAMC,IACpChC,EAAKgB,EAAa+B,E,MAElBD,EAAaE,KAAKP,EAAiBV,EAAMC,IACzChC,EAAKgB,EAAa8B,GAEtBzB,GAAa,C,CAjDb4B,CAAiBL,IALbM,MAAM,iB,ICZdR,EAAKC,iBAAiB,SD6BtB,SAA4BQ,G,IAAA5B,EAAA4B,EAAE5B,OACxBuB,EAAelC,EAAKI,GAEtB,GAAuB,OAApBO,EAAO6B,SAAmB,CACzB7B,EAAOgB,UAAUc,OAAO,WACxB,IAAMC,EAAYR,EAAaS,WAC3B,SAACX,G,OAASY,OAAOZ,EAAKT,MAAQqB,OAAOjC,EAAOe,QAAQH,G,IAExDW,EAAaQ,GAAWtB,QAAUc,EACjCQ,GAAWtB,M,MACT,GAAGT,EAAOgB,UAAUkB,SAAS,SAAU,CAC1ClC,EAAOmC,WAAWC,SAClB,IAAMC,EAAYd,EAAaS,WAC3B,SAACX,G,OAASY,OAAOZ,EAAKT,MAAQqB,OAAOjC,EAAOmC,WAAWpB,QAAQH,G,IAEnEW,EAAae,OAAOD,EAAW,E,CAEnC5D,EAAKgB,EAAa8B,E,IC7CtBgB,OAAOnB,iBAAiB,oBDoExB,WACI,IAAMG,EAAelC,EAAKI,QAENF,IAAjBgC,GACCA,EAAaiB,SAAQ,SAAAZ,G,OACrBrB,EAD4BqB,EAAJpB,KAAQoB,EAAFhB,GAAUgB,EAANnB,O","sources":["src/toDoScripts/storage.js","src/toDoScripts/function.js","src/toDoScripts/main.js"],"sourcesContent":["export const save = (key, value) => {\n    try {\n        const data = JSON.stringify(value);\n        localStorage.setItem(key, data);\n    } catch (err) {\n        console.error(\"Stringify error\", err.message);\n    }\n};\n\nexport const load = (key) => {\n    try {\n        const data = localStorage.getItem(key);\n        return data === null ? undefined : JSON.parse(data);\n    } catch(err) {\n        console.error(\"Parse error\", err.message);\n    }\n};","import { save, load } from \"./storage\";\n\nconst STORAGE_KEY = \"tasks\";\nconst myInput = document.getElementById(\"myInput\");\nconst myUL = document.getElementById(\"myUL\");\n\nlet currentId = 0;\n\nfunction addCloseButton(target) {\n    const span = document.createElement(\"span\");\n    const txt = document.createTextNode(\"\\u00D7\");\n    span.className = \"close\";\n    span.appendChild(txt);\n    target.appendChild(span)\n}\n\nfunction addNewTask() {\n    const task = myInput.value.trim();\n    \n    myInput.value = '';\n\n    if(task === '') {\n        alert(\"Введіть текст!\");\n        return;\n    }\n\n    createLi(task);\n    addTaskToStorage(task);\n}\n\nfunction createLi(text, isDone = false, id = currentId) {\n    const liEl = document.createElement(\"li\");\n    liEl.textContent = text;\n    liEl.dataset.id = id;\n    if(isDone) liEl.classList.add(\"checked\");\n    myUL.appendChild(liEl);\n    addCloseButton(liEl);\n}\n\nfunction handleTaskBehavior({ target }) {\nconst currentState = load(STORAGE_KEY);\n\n    if(target.nodeName === \"LI\") {\n        target.classList.toggle(\"checked\");\n        const taskIndex = currentState.findIndex(\n            (task) => Number(task.id) === Number(target.dataset.id)\n        );\n        currentState[taskIndex].isDone = !currentState\n        [taskIndex].isDone;\n    } else if(target.classList.contains(\"close\")) {\n        target.parentNode.remove();\n        const taskIndex = currentState.findIndex(\n            (task) => Number(task.id) === Number(target.parentNode.dataset.id)\n        );\n        currentState.splice(taskIndex, 1);    \n    }\n    save(STORAGE_KEY, currentState);\n}\n\nfunction createTaskObject(text, isDone) {\n    return {\n        text,\n        isDone,\n        id: currentId,\n    }\n}\n\nfunction addTaskToStorage(text, isDone = false) {\n    const currentState = load(STORAGE_KEY);\n    if(currentState === undefined) {\n        const arr = [createTaskObject(text, isDone)];\n        save(STORAGE_KEY, arr)\n    } else {\n        currentState.push(createTaskObject(text, isDone))\n        save(STORAGE_KEY, currentState)\n    }\n    currentId += 1;\n}   \n\nfunction fillTasksList() {\n    const currentState = load(STORAGE_KEY);\n\n    if(currentState !== undefined) {\n        currentState.forEach(({ text, id, isDone }) => \n        createLi(text, id, isDone));\n    }\n}\n\nexport { addNewTask, handleTaskBehavior, fillTasksList };","import { \n    addNewTask, \n    fillTasksList,\n    handleTaskBehavior\n} from \"./function\";\n\nconst myUL = document.getElementById(\"myUL\");\nconst addBtn = document.getElementById(\"addBtn\");\n\naddBtn.addEventListener('click', addNewTask);\nmyUL.addEventListener('click', handleTaskBehavior);\nwindow.addEventListener(\"DOMContentLoaded\", fillTasksList);\n \n"],"names":["$d2c1b15d9ea506f5$export$a1544dad697b423d","key","value","data","JSON","stringify","localStorage","setItem","err","console","error","message","$d2c1b15d9ea506f5$export$11e63f7b0f3d9900","getItem","undefined","parse","$7722e8d6e3a76f2b$var$STORAGE_KEY","$7722e8d6e3a76f2b$var$myInput","document","getElementById","$7722e8d6e3a76f2b$var$myUL","$7722e8d6e3a76f2b$var$currentId","$7722e8d6e3a76f2b$var$addCloseButton","target","span","createElement","txt","createTextNode","className","appendChild","$7722e8d6e3a76f2b$var$createLi","text","isDone","arguments","length","id","liEl","textContent","dataset","classList","add","$7722e8d6e3a76f2b$var$createTaskObject","$0cd9160791981cb0$var$myUL","addEventListener","task","trim","currentState","arr","push","$7722e8d6e3a76f2b$var$addTaskToStorage","alert","param","nodeName","toggle","taskIndex","findIndex","Number","contains","parentNode","remove","taskIndex1","splice","window","forEach"],"version":3,"file":"toDoList.c1ecdcf4.js.map"}