{"mappings":"AAoGA,MAKMA,EAAOC,SAASC,cAAc,YAC9BC,EAASF,SAASC,cAAc,aAEtC,IAAIE,EAAc,EASdC,EAAW,IAAIC,sBAEnB,SAAgBC,EAASC,GACrBD,EAAQE,SAASC,IACVA,EAAMC,iBACLP,GAAe,EACfQ,EAAYR,GACXS,MAAKC,IACFd,EAAKe,mBAAmB,YAAaC,EAAaF,EAAKG,UACpDH,EAAKI,OAASJ,EAAKK,aAClBX,EAASY,UAAUjB,EAAO,IAGjCkB,OAAOC,GAAQC,QAAQC,IAAIF,K,MAnB1B,CACVG,KAAM,KACNC,WAAY,QACZC,UAAW,IAqBf,SAASf,EAAYM,EAAO,GACzB,OAAOU,MAAM,iGAAmDV,iBAC9DL,MAAKgB,IACF,IAAIA,EAASC,GACT,MAAM,IAAIC,MAAMF,EAASG,YAE7B,OAAOH,EAASI,MAAM,G,CAW9B,SAASjB,EAAakB,GAClB,OAAOA,EAAOC,KAAI,EAACC,MAAEA,EAAKC,eAAEA,EAAcC,SAAEA,EAAQC,YAAEA,EAAWC,aAAEA,KAAmB,yHAE/BD,WAAqBF,gEACpCD,+BAAMC,wC,0BAEjCC,+BAEVG,KAAK,G,CAfZ7B,IACCC,MAAKC,IACFd,EAAKe,mBAAmB,YAAaC,EAAaF,EAAKG,UACvDZ,EAASqC,QAAQvC,EAAO,IAE3BkB,OAAOC,GAAQC,QAAQC,IAAIF","sources":["src/lordOfTeRings-scripts/lotr.js"],"sourcesContent":["\n// const list = document.querySelector(\".js-lord\");\n\n// const BASE_URL = \"https://the-one-api.dev/v2\";\n// const END_POINT =\"/character\";\n// const KEY = \"_tIFbeZ1P-MpeTH2BzF-\";\n\n// let page = 0;\n\n// function getCharacter() {\n//     const param = new URLSearchParams({\n//         limit: 30,\n//         page: 1,\n//     });\n\n//     const option = {\n//         method: \"GET\",\n//         headers: {\n//             Authorization: `Bearer ${KEY}`\n//         }\n//     }\n\n//     fetch(`${BASE_URL}${END_POINT}?${param}`,option)\n//     .then(response => response.json()).then(data => list.innerHTML = createMarkup(data.docs))\n// }\n// getCharacter()\n\n// function createMarkup(arr) {\n//     return arr.map(({ race, gender, birth, spouse, wikiUrl, name  }) => `\n//         <li>\n//             <h2>${name}</h2>\n//             <h3>${race}</h3>\n//             <h4>${gender}</h4>\n//             <h5>${birth}</h5>\n//             <h6>${spouse}</h6>\n//             <a href=\"${wikiUrl}\">Read more</a>\n//         </li>\n//     `).join('')\n// }\n\n\n// button load more\n\n// const btn = document.querySelector(\".js-load\");\n// const list = document.querySelector(\".js-lord\");\n// const target = document.querySelector(\".js-guard\");\n\n\n// const BASE_URL = \"https://api.themoviedb.org/3/\";\n// const END_POINT = \"trending/movie/day\";\n// const API_KEY = \"0f1efce4687e0d99ded26e5d35e0a6b0\";\n// const IMG_PATH = \"https://image.tmdb.org/t/p/w500\";\n\n// let currentPage = 1;\n\n// btn.addEventListener('click', onLoad);\n\n// function onLoad() {\n//     currentPage += 1;\n//     getTrending(currentPage)\n//     .then(data => {\n//         list.insertAdjacentHTML('beforeend', createMarkup(data.results));\n//         if(data.page === data.total_pages) {\n//             btn.hidden = true;\n//         }\n//     })\n//     .catch((err) => console.log(err));\n// }\n\n// function getTrending(page = 1) {\n//    return fetch(`${BASE_URL}${END_POINT}?api_key=${API_KEY}&page=${page}&language=uk`)\n//     .then(response => {\n//         if(!response.ok){\n//             throw new Error(response.statusText);\n//         }\n//         return response.json();\n//     })\n// }\n\n// getTrending()\n// .then(data => {\n//     list.insertAdjacentHTML('beforeend', createMarkup(data.results))\n//     if(data.page !== data.total_pages) {\n//         btn.hidden = false;\n//     }\n// })\n// .catch((err) => console.log(err));\n\n// function createMarkup(result) {\n//     return result.map(({ title, original_title, overview, poster_path, release_date }) => `\n//         <li class=\"list-movie__item\">\n//             <img class=\"list-movie__img\" src=\"${IMG_PATH}${poster_path}\" alt=\"${original_title}\" width=\"350\" />\n//             <h2 class=\"list-movie__title\">${title} <i>оригінальна назва:</i> ${original_title}</h2>\n//             <h3>Дата релізу: ${release_date}</h3>\n//             <p>${overview}</p>\n//         </li>\n//     `).join('')\n// }\n\n// infiniti scroll\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\nconst END_POINT = \"trending/movie/day\";\nconst API_KEY = \"0f1efce4687e0d99ded26e5d35e0a6b0\";\nconst IMG_PATH = \"https://image.tmdb.org/t/p/w500\";\n\nconst list = document.querySelector(\".js-lord\");\nconst target = document.querySelector(\".js-guard\");\n\nlet currentPage = 1;\n\n// опції для класу IntersectionObserver\nlet options = {\n    root: null,\n    rootMargin: \"300px\",\n    threshold: 1,\n};\n\nlet observer = new IntersectionObserver(onLoad, options);\n\nfunction onLoad(entries, observer) {\n    entries.forEach((entry) => {\n        if(entry.isIntersecting) {\n            currentPage += 1;\n            getTrending(currentPage)\n            .then(data => {\n                list.insertAdjacentHTML('beforeend', createMarkup(data.results));\n                if(data.page === data.total_pages) {\n                    observer.unobserve(target);\n                }\n            })\n            .catch((err) => console.log(err));\n        }\n    })\n}\n\nfunction getTrending(page = 1) {\n   return fetch(`${BASE_URL}${END_POINT}?api_key=${API_KEY}&page=${page}&language=uk`)\n    .then(response => {\n        if(!response.ok){\n            throw new Error(response.statusText);\n        }\n        return response.json();\n    })\n}\n\ngetTrending()\n.then(data => {\n    list.insertAdjacentHTML('beforeend', createMarkup(data.results))\n    observer.observe(target)\n})\n.catch((err) => console.log(err));\n\nfunction createMarkup(result) {\n    return result.map(({ title, original_title, overview, poster_path, release_date }) => `\n        <li class=\"list-movie__item\">\n            <img class=\"list-movie__img\" src=\"${IMG_PATH}${poster_path}\" alt=\"${original_title}\" width=\"350\" />\n            <h2 class=\"list-movie__title\">${title} <i>оригінальна назва:</i> ${original_title}</h2>\n            <h3>Дата релізу: ${release_date}</h3>\n            <p>${overview}</p>\n        </li>\n    `).join('')\n}"],"names":["$1ecd2110090ea9e9$var$list","document","querySelector","$1ecd2110090ea9e9$var$target","$1ecd2110090ea9e9$var$currentPage","$1ecd2110090ea9e9$var$observer","IntersectionObserver","entries","observer1","forEach","entry","isIntersecting","$1ecd2110090ea9e9$var$getTrending","then","data","insertAdjacentHTML","$1ecd2110090ea9e9$var$createMarkup","results","page","total_pages","unobserve","catch","err","console","log","root","rootMargin","threshold","fetch","response","ok","Error","statusText","json","result","map","title","original_title","overview","poster_path","release_date","join","observe"],"version":3,"file":"lordOfTheRings.c01d2125.js.map"}