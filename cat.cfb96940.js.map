{"mappings":"YAAA,IAAMA,EAAMC,SAASC,cAAc,aAC7BC,EAASF,SAASC,cAAc,WAElCE,EAAc,EAQdC,EAAW,IAAIC,sBAEnB,SAAgBC,EAASC,GACrBD,EAAQE,SAAQ,SAACC,GACVA,EAAMC,gBAELC,EADAR,GAAe,GAEdS,MAAK,SAAAC,GACFC,KAAKC,mBAAmB,YAAaC,EAAOH,IACzCA,EAAKI,OAASJ,EAAKK,aAClBX,EAASY,UAAUjB,E,IAG1BkB,OAAM,SAACC,G,OAAQC,QAAQC,IAAIF,E,SAnB3B,CACTG,KAAM,KACNC,WAAY,QACZC,UAAW,IAqBf,SAASf,I,IAASM,EAAAU,UAAAC,OAAA,YAAAD,UAAA,GAAQA,UAAA,GAAD,EACfE,EAAW,6CACXC,EAAU,wEACVC,EAAM,GAA8CC,OAA3CH,EAAS,oCAAkDG,OAAhBF,EAAQ,UAAaE,OAALf,GAG1E,OAFAK,QAAQC,IAAIQ,GAELE,MAAMF,GACZnB,MAAK,SAAAsB,G,OAAYA,EAASC,M,IAC1BvB,MAAK,SAAAC,GACFd,EAAIgB,mBAAmB,YAAcC,EAAOH,IAC5CT,EAASgC,QAAQlC,E,IACtBkB,OAAM,SAACC,G,OAAQC,QAAQC,IAAIF,E,IAK9B,SAASL,EAAOqB,GACZ,OAAOA,EAAIC,KAAI,SAAAC,G,IAAGR,EAAGQ,EAAHR,IACwBS,EADbD,EAANE,OAC0B,GAAzCC,EAAkCF,EAAlCE,KAAMC,EAA4BH,EAA5BG,GAAIC,EAAwBJ,EAAxBI,OAAQC,EAAgBL,EAAhBK,YAE1B,MAAM,sCAEmBb,OADMW,EAAG,mCAEDX,OADRU,EAAK,8CAEOV,OADJY,EAAO,kDACUZ,OAAbD,EAAI,WAC5BC,OADqCU,EAAK,mCAC9BV,OAAZa,EAAY,6B,IAErBC,KAAK,G,CAbbnC,G","sources":["src/Cat-scripts/cat-script.js"],"sourcesContent":["const box = document.querySelector(\".root-cat\");\nconst target = document.querySelector(\".target\");\n\nlet currentPage = 1;\n\nlet option = {\n    root: null,\n    rootMargin: \"300px\",\n    threshold: 1,\n};\n\nlet observer = new IntersectionObserver(onLoad, option);\n\nfunction onLoad(entries, observer) {\n    entries.forEach((entry) => {\n        if(entry.isIntersecting) {\n            currentPage += 1;\n            fetchCat(currentPage)\n            .then(data => {\n                list.insertAdjacentHTML('beforeend', markup(data));\n                if(data.page === data.total_pages) {\n                    observer.unobserve(target);\n                }\n            })\n            .catch((err) => console.log(err));\n        }\n    })\n}\n\nfunction fetchCat(page = 1) {\n    const BASE_URL = \"https://api.thecatapi.com/v1/images/search\";\n    const API_KEY = \"live_1Vj7n5aJuf5yxdbAECUbqNw1q6zp3z4LY0EUuUZYfXCD687p6tfQtxYjFie5zZhD\";\n    const url = `${BASE_URL}?limit=8&breed_ids=beng&api_key=${API_KEY}&page=${page}`;\n    console.log(url)\n    \n    return fetch(url)\n    .then(response => response.json())\n    .then(data => {\n        box.insertAdjacentHTML('beforeend',  markup(data))\n        observer.observe(target)\n}).catch((err) => console.log(err));\n\n}\nfetchCat()\n\nfunction markup(arr) {\n    return arr.map(({ url, breeds }) => {\n    const { name, id, origin, description } = breeds[0];\n\n    return`\n        <div class=\"cat-box\" id=\"${id}\">\n            <h2>Cat breed: ${name}</h2>\n            <h3>Country of Origin: ${origin}</h3>\n            <img class=\"cat__img\" src=\"${url}\" alt=\"${name}\" width=\"300\">\n            <p>${description}</p>\n        </div>\n    `}).join('')\n}"],"names":["$fd07a2df3db5de7d$var$box","document","querySelector","$fd07a2df3db5de7d$var$target","$fd07a2df3db5de7d$var$currentPage","$fd07a2df3db5de7d$var$observer","IntersectionObserver","entries","observer1","forEach","entry","isIntersecting","$fd07a2df3db5de7d$var$fetchCat","then","data","list","insertAdjacentHTML","$fd07a2df3db5de7d$var$markup","page","total_pages","unobserve","catch","err","console","log","root","rootMargin","threshold","arguments","length","BASE_URL","API_KEY","url","concat","fetch","response","json","observe","arr","map","param","ref","breeds","name","id","origin","description","join"],"version":3,"file":"cat.cfb96940.js.map"}